networks:
  db_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
  web_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/24
  mon_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/24

  ansible_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/24

volumes:
  mariadb_data:
  grafana_data:
  prometheus_data:

services:

  mariadb:
    image: mariadb:11.3
    container_name: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: takata
      MYSQL_USER: deploy
      MYSQL_PASSWORD: xxxx
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      db_net:
        ipv4_address: 172.20.0.10
    security_opt:
      - no-new-privileges:true

  spring_app:
    build:
      context: .
      dockerfile: infra/spring_app/Dockerfile
    image: spring_app:arm64
    container_name: spring_app
    depends_on:
      - mariadb
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://172.20.0.10:3306/takata
      SPRING_DATASOURCE_USERNAME: deploy
      SPRING_DATASOURCE_PASSWORD: xxxx
      SPRING_PROFILES_ACTIVE: prod
    expose:
      - "8080"
    networks:
      db_net:
        ipv4_address: 172.20.0.20
      web_net:
        ipv4_address: 172.21.0.20
    restart: always
    security_opt:
      - no-new-privileges:true

  angular_app:
    build:
      context: .
      dockerfile: infra/angular_app/Dockerfile
    image: angular_app:arm64
    container_name: angular_app
    expose:
      - "4200"
    networks:
      web_net:
        ipv4_address: 172.21.0.21
    restart: always
    security_opt:
      - no-new-privileges:true

  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      - spring_app
      - angular_app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    networks:
      web_net:
        ipv4_address: 172.21.0.10
    restart: always
    security_opt:
      - no-new-privileges:true

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      mon_net:
        ipv4_address: 172.22.0.10
    restart: always
    security_opt:
      - no-new-privileges:true

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      mon_net:
        ipv4_address: 172.22.0.11
    restart: always
    security_opt:
      - no-new-privileges:true

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: 'false'
    networks:
      mon_net:
        ipv4_address: 172.22.0.12
    restart: always
    security_opt:
      - no-new-privileges:true

#  ansible:
#    build:
#      context: .
#      dockerfile: infra/ansible/Dockerfile
#    container_name: ansible
#    networks:
#      ansible_net:
#        ipv4_address: 172.30.0.1
#      mon_net:
#    restart: unless-stopped
#    security_opt:
#      - no-new-privileges:true
